- platform: template
  sensors:
    kettle_heating:
      entity_id:
        - sensor.woonkamer_heating
        - sensor.hal_heating
        - sensor.badkamer_heating
        - sensor.kastenkamer_heating
        - sensor.slaapkamer_heating
        - sensor.logeerkamer_heating
        - sensor.zolder_heating
      value_template: >-
        {{
          [
            states('sensor.woonkamer_heating')|int,
            states('sensor.hal_heating')|int,
            states('sensor.badkamer_heating')|int,
            states('sensor.kastenkamer_heating')|int,
            states('sensor.slaapkamer_heating')|int,
            states('sensor.logeerkamer_heating')|int,
            states('sensor.zolder_heating')|int
          ] | max | int > 5
        }}

    # takes into account waze travel time to destination
    # will return True if travel time + 1 hour is left before appointment
    # and end time of appointment is atleast 30 mins in the future
    # which will result in heating turned off 1 hour before leaving
    thermostat_leaving_next_hour:
      entity_id:
        - sensor.waze_calendar_to_next_appointment
        - sensor.calendar_malissa_frank_start_time
        - sensor.time
      value_template: >-
        {{
          not is_state('sensor.calendar_malissa_frank_location', '') and
          not is_state('sensor.calendar_malissa_frank_location', None) and
          not is_state('sensor.waze_calendar_to_next_appointment', None) and
          not is_state('sensor.calendar_malissa_frank_start_time', None) and
          not is_state('sensor.calendar_malissa_frank_end_time', None) and
          (as_timestamp(states('sensor.calendar_malissa_frank_start_time')) - ((state_attr('sensor.waze_calendar_to_next_appointment', 'duration')|int) * 60) - 3600) < as_timestamp(now()) and
          (as_timestamp(states('sensor.calendar_malissa_frank_end_time')) - (30 * 60)) > as_timestamp(now())
        }}
