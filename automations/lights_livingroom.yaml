- alias: "Licht Woonkamer aan bij beweging in de ochtend"
  initial_state: on
  trigger:
    - platform: state
      entity_id:
        switch.hallway_pir_0
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ is_state('input_select.timeofday', 'morning') }}"
      - condition: template
        value_template: "{{ not is_state('light.livingroom', 'on') }}"
  action:
    service: scene.turn_on
    data_template:
      entity_id: "scene.livingroom_{{ states('input_select.timeofday') }}"

- alias: "Licht Woonkamer uit als niemand meer thuis is"
  initial_state: on
  trigger:
    - platform: state
      entity_id: group.all_devices
      from: home
      to: not_home
  condition:
    condition: template
    value_template: "{{ is_state('light.livingroom', 'on') }}"
  action:
    service: scene.turn_on
    data_template:
      entity_id: "scene.livingroom_off"

- alias: "Licht Woonkamer aan bij weinig zonlicht als er iemand thuis is"
  initial_state: on
  trigger:
    - platform: numeric_state
      entity_id: sensor.solarradiation
      below: 30
    - platform: state
      entity_id: group.all_devices
      to: home
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.solarradiation
        below: 30
      - condition: template
        value_template: "{{ is_state('input_select.timeofday', 'midday') or is_state('input_select.timeofday', 'evening') }}"
      - condition: template
        value_template: "{{ is_state('group.all_devices', 'home') }}"
      - condition: template
        value_template: "{{ not is_state('light.livingroom', 'on') }}"
  action:
    service: scene.turn_on
    data_template:
      entity_id: "scene.livingroom_{{ states('input_select.timeofday') }}"

- alias: "Licht Woonkamer uit bij genoeg zonlicht overdag"
  initial_state: on
  trigger:
    - platform: numeric_state
      entity_id: sensor.solarradiation
      above: 50
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ is_state('input_select.timeofday', 'midday') }}"
      - condition: template
        value_template: "{{ is_state('light.livingroom', 'on') }}"
  action:
    service: scene.turn_on
    entity_id: "scene.livingroom_off"

- alias: "Licht Woonkamer uit zodra we in nachtmodus gaan en niemand kijkt tv"
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_select.timeofday
      to: "night"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ is_state('light.livingroom', 'on') }}"
      - condition: template
        value_template: "{{ is_state('remote.livingroom', 'off') }}"
  action:
    service: scene.turn_on
    entity_id: "scene.livingroom_off"

- alias: "Licht Woonkamer aan bij beweging of tv 'snachts"
  initial_state: on
  trigger:
    - platform: state
      entity_id:
        switch.hallway_pir_0,
        switch.hallway_door_0,
        remote.livingroom
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ is_state('input_select.timeofday', 'night') }}"
  action:
    service: scene.turn_on
    data_template:
      entity_id: "scene.livingroom_{{ states('input_select.timeofday') }}"

- alias: "Licht Woonkamer uit na 5 minuten 'snachts"
  initial_state: on
  trigger:
    - platform: state
      entity_id:
        switch.hallway_pir_0,
        switch.hallway_door_0,
        remote.livingroom # TV is uitgezet
      to: 'off'
      for:
        minutes: 5
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ is_state('light.livingroom', 'on') }}"
      - condition: template
        value_template: "{{ is_state('remote.livingroom', 'off') }}"
      - condition: template
        value_template: "{{ is_state('input_select.timeofday', 'night') }}"
  action:
    service: scene.turn_on
    entity_id: "scene.livingroom_off"

- alias: "Licht Woonkamer volgt dagdeel behalve 'snachts"
  initial_state: on
  trigger:
  - platform: state
    entity_id: input_select.timeofday
  condition:
    condition: template
    value_template: "{{ not is_state('light.livingroom', 'off') and not is_state('input_select.timeofday', 'night') }}"
  action:
    service: scene.turn_on
    data_template:
      entity_id: "scene.livingroom_{{ states('input_select.timeofday') }}"
