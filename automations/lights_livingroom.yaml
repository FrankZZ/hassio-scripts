- alias: "Licht Woonkamer aan bij beweging als het donker is buiten"
  initial_state: on
  trigger:
    - platform: state
      entity_id:
        binary_sensor.livingroom_pir_0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.attributes.illuminance|default(0)|int <= states('input_number.livingroom_darkness_treshold')|default(0)|int }}"
      - condition: state
        entity_id: light.livingroom_lights
        state: 'off'
      - condition: state
        entity_id: binary_sensor.livingroom_pir_0
        state: 'on'
  action:
    - service: light.turn_on
      data_template:
        entity_id: "light.livingroom_lights"
        # brightness_pct: "{{ states('input_number.livingroom_brightness_' + states('input_select.timeofday'))|default(100)|int }}"
    # - service: switch.turn_on
    #   entity_id: switch.livingroom_power_1 # christmas tree
    - service: timer.start
      entity_id: timer.livingroom

- alias: "Licht Woonkamer blijft aan bij beweging als het donker is buiten"
  initial_state: on
  trigger:
    - platform: state
      entity_id:
        binary_sensor.livingroom_pir_0
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.livingroom_lights
        state: 'on'
      - condition: template
        value_template: "{{ trigger.to_state.attributes.illuminance|default(0)|int <= states('input_number.livingroom_darkness_treshold')|default(0)|int+10 }}"
  action:
    - service: timer.start
      entity_id: timer.livingroom

- alias: Licht Woonkamer uit na configurabele tijd geen beweging behalve savonds
  trigger:
    platform: state
    entity_id: binary_sensor.livingroom_pir_0
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ not is_state('input_select.timeofday', 'evening') }}"
      # - condition: template
      #   value_template: "{{ not is_state('light.livingroom_lights', 'on') }}"
  action:
    service: timer.start
    data_template:
      entity_id: timer.livingroom
      duration: "{{ (states('input_number.livingroom_timeout')|default(1)|int) * 60 }}"

- alias: "Licht Woonkamer aan savonds als er iemand thuis is"
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_select.timeofday
      to: 'evening'
  condition:
    condition: state
    entity_id: group.all_persons
    state: 'home'
  action:
    - service: light.turn_on
      entity_id: "light.livingroom_lights"
    # - service: switch.turn_on
    #   entity_id: switch.livingroom_power_1 # christmas tree


- alias: "Licht Woonkamer 0 aan savonds als er niemand thuis is"
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_select.timeofday
      to: 'evening'
  condition:
    condition: state
    entity_id: group.all_persons
    state: 'not_home'
  action:
    - service: light.turn_on
      entity_id: "light.livingroom_light_0"
    # - service: switch.turn_on
    #   entity_id: switch.livingroom_power_1  # christmas tree

- alias: "Licht Woonkamer 0 uit als er niemand thuis is als het nacht is geworden"
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_select.timeofday
      to: 'night'
  condition:
    condition: state
    entity_id: group.all_persons
    state: 'not_home'
  action:
    - service: light.turn_off
      entity_id: "light.livingroom_light_0"
    # - service: switch.turn_off
    #   entity_id: switch.livingroom_power_1  # christmas tree

- alias: "Licht Woonkamer uit als de avond afgelopen is"
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_select.timeofday
      to: 'night'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sensor.harmony_livingroom
        state: 'PowerOff'
      - condition: state
        entity_id: binary_sensor.livingroom_pir_0
        state: 'off'
      - condition: state
        entity_id: timer.livingroom
        state: 'idle'
  action:
    - service: light.turn_off
      entity_id: light.livingroom_lights

- alias: "Licht Woonkamer uit als timer stopt"
  initial_state: on
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.livingroom
  condition:
    condition: template
    value_template: "{{ not is_state('input_select.timeofday', 'evening') }}"
  action:
    - service: light.turn_off
      entity_id: light.livingroom_lights
    # - service: switch.turn_off
    #   entity_id: switch.livingroom_power_1 # christmas tree

# - alias: "Licht Woonkamer volgt dagdeel"
#   initial_state: on
#   trigger:
#   - platform: state
#     entity_id: input_select.timeofday
#   condition:
#     condition: state
#     entity_id: light.livingroom_lights
#     state: 'on'
#   action:
#     - service: light.turn_on
#       data_template:
#         entity_id: "light.livingroom_lights"
#         brightness_pct: "{{ states('input_number.livingroom_brightness_' + states('input_select.timeofday'))|default(100)|int }}"

- alias: Turn off livingroom light when it's light
  trigger:
    - platform: state
      entity_id: binary_sensor.livingroom_pir_0
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.livingroom_lights
        state: 'on'
      - condition: template
        value_template: "{{ (trigger.to_state.attributes.illuminance|default(0)|int) > (states('input_number.livingroom_darkness_treshold')|default(0)|int + 20) }}"
      - condition: template
        value_template: "{{ not is_state('input_select.timeofday', 'evening') }}"
      - condition: template
        value_template: "{{ not is_state('input_select.timeofday', 'night') }}"
  action:
    - service: light.turn_off
      entity_id: light.livingroom_lights
    # - service: switch.turn_off
    #   entity_id: switch.livingroom_power_1
    - service: timer.start
      entity_id: timer.livingroom


- alias: Livingroom light dim when TV goes on
  trigger:
    - platform: state
      entity_id: sensor.harmony_livingroom
      from: "PowerOff"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.livingroom_light_0
        state: 'on'
      - condition: template
        value_template: "{{ is_state('input_select.timeofday', 'evening') or is_state('input_select.timeofday', 'night') }}"
  action:
    - service: script.decrease_livingroom_lights

- alias: Livingroom light brighter when TV goes off
  trigger:
    - platform: state
      entity_id: sensor.harmony_livingroom
      to: "PowerOff"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.livingroom_light_0
        state: 'on'
  action:
    - service: script.increase_livingroom_lights
